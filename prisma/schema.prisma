// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  username    String   @unique
  email       String   @unique
  password    String
  phoneNumber String
  role        Role
  authToken   String   @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([email])
  @@map("user")
}

model Product {
  id          String   @id @default(uuid())
  fabricId    String
  productName String
  description String?  @db.Text
  price       Float
  location    String
  tailorName  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("product")
}

model Measurement {
  id        String   @id @default(uuid())
  user_id   String   @db.VarChar(255)
  neck      Float
  chest     Float
  weist     Float
  hips      Float
  inseam    Float
  sleeve    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Order     Order[]

  @@map("measurement")
}

model Order {
  id               String      @id @default(uuid())
  user_id          String      @db.VarChar(255)
  measurement      Measurement @relation(fields: [measurement_id], references: [id])
  measurement_id   String      @unique()
  product_id       Float
  status           Float
  delivery_price   Float
  total_price      Float
  delivery_address Float
  delivery_date    DateTime    @default(now())
  order_date       DateTime    @default(now())
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @default(now())

  @@map("order")
}

model Fabric {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  fabricTypes FabricType[]

  @@map("fabric")
}

model FabricType {
  id       String @id @default(uuid())
  fabricId String

  fabric    Fabric   @relation(fields: [fabricId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("fabrictype")
}

enum Role {
  CLIENT
  TAILOR
  ADMIN
}
